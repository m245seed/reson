name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Install Rust nightly
        run: rustup toolchain install nightly-2024-12-17

      - name: Set Rust nightly as default
        run: rustup default nightly-2024-12-17

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Build project
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Generate coverage report
        run: cargo tarpaulin --out Xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cobertura.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  release:
    if: github.event_name == 'release'

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            output_name: reson_linux64
          - os: macos-latest
            target: x86_64-apple-darwin
            output_name: reson_darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            output_name: reson_win64.exe

    runs-on: ${{ matrix.os }}

    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust nightly
        run: rustup toolchain install nightly-2024-12-17

      - name: Set Rust nightly as default
        run: rustup default nightly-2024-12-17

      - name: Install target for static linking
        run: rustup target add ${{ matrix.target }}

      - name: Build project with static linking
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary and set permissions
        run: |
          mv ./target/${{ matrix.target }}/release/reson ./target/release/${{ matrix.output_name }}
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./target/release/${{ matrix.output_name }}